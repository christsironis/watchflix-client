// Next.js API route support: https://nextjs.org/docs/api-routes/introduction

export default async function handler(req, res) {
    const { title } = req.query;
    const data = await GetSubs( title );
    res.status(200).send(data);
  }
  
  async function GetSubs(title){
    const request = await fetch("https://subscene.com/cdn-cgi/challenge-platform/h/g/cv/result/71f57b7cbd9e778b", {
        "headers": {
          "accept": "*/*",
          "accept-language": "en",
          "cache-control": "no-cache",
          "content-type": "application/json",
          "pragma": "no-cache",
          "sec-ch-ua": "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"102\", \"Google Chrome\";v=\"102\"",
          "sec-ch-ua-mobile": "?0",
          "sec-ch-ua-platform": "\"Windows\"",
          "sec-fetch-dest": "empty",
          "sec-fetch-mode": "cors",
          "sec-fetch-site": "same-origin",
          "cookie": "_ga=GA1.2.573400001.1655906136; _gid=GA1.2.2028172276.1655906136; _gat=1",
          "Referer": "https://subscene.com/subtitles/fast-five-fast-and-furious-5-the-rio-heist",
          "Referrer-Policy": "strict-origin-when-cross-origin"
        },
        "body": `"{"m":"w.xtcvyswgRKE.nxchl7Lejz0RrWZPc5R.sMdRnBthk-1655906134-0-AdFiVfcHE7+qNdHaCXOHGN7KmAT4K0ic8DPRVAmk/re4wr2r2TR2Uka80GhO3jYtV201bi3zO/8oMOiPmHiUHSJbJUUKeH/gY9bdlJkAO38OspHXZhwHsO4fVKc00o40xDnbb+RgX6ROb5w+PaX5j9CFPPIMpkh88kedXu1nbY0sGTaHhYN+sWJmym7YWQfiXQ==","wp":"zjSlRP2fR3SPG5$PQy5yulmCSSamGl2GC2vy9-S5UynyPCpS0Uyvy5wmq9G0VZy65rphyO5Dlh0cyRl$Ut5y2rGy18GR95z8JYLfQHJs3Wy+YCROCGdUUnLCX$VSyiyv4Fy0n5U2ASw+FxQ5YDCy5wZy$aGb2C$Ry2Yy$8j+yy7901oPlyTaZUM5tSTPZ$U3J1ZDhL0y2$wyt$yVFC$zS2gE$Fj2vCD-pW8priDIRN$3WW$y2Y85NIbYvJWIPNdaZ5o225nDJaiK-SOUmyymZZCA8fc9RlU2SyI2cJ7+obZPgNt7N39IMiogGhShCXJFy05C8CyU+nPiSoJL21vP$lyyc1Qf6t8V5jy0fcJCgWCB5jW5JJ$aym7V9NVM7aVr+$1XAWS-KntN-mWLErG6NEAGyU6C8wx3PjP62QSyNRR0vzdNIbGP24$bnD$Uu8DfytQQkVhJbc7$yEYYMyhgCCfDFaz3$pFty3GT7xpbJhy09B0m8fn882JnMaW5FTG728lslZAYDqYLsNLdZK2x8cq48C29bb+Q9pWW8DQ19yDQCD10IPyhEn1K8txM7GKIFMVgifnUPKPlnztIpn1p921hMjpKcJAVgis+snX19RZAy-rTd20FtgOyHLKfnKUpOG33JGdX9S+9GmyDm9GxcPoQso5BD9ZUVIYQ$GcohbXfqlFSjrU7ay2tC3KMa2+x2a-Rcy2C5+ShrRF$S80XWG7Io0o32DUC9+Y2Dr2+MSQ5DSIWlc5CwItPhrJZMbJ2a$aoCZtaO+TGJz$Uyh1SUtD5ySMFC3CA2ClDpGVyryb-$l5lrR$Mj7Cld+wnaF2PyW2C70Q6m9$S589LWarryG$SwlDsk1$yz136rz5FJrS5hzm+J89mbP881E+oPrv$FFhmtCVjsyVv7Xxxt70x2JDSVMzCf6o5CoFZ18abxSFE7pmG$YkJD-JYzSZAVMraxoVltbx0Y+580ruV9fVP2$lVZb6UC+tZ22z051VZDG5ZwB92-AA9$lwZF2-1I7MGWI8yh580SYfFk2Cs2oPSsRJFFfVZaYA22W1SIrDVCb4VCOw39-NDPRcpJY$tb2BECcx82l5PWmSS0Wv71w02Ev2AE7Bwc0rR-qFgVAsoDJZAVCyqq3CN-$0f1ncdcsyPIGslRA2fZoARJZxCBAZ8$BMzUygJI2NhK2aLB1Ijh6vPkygRPzFJon8-ZM2x$zcqF9GowVUY5PrFLqT2xBclHFyEhD$GCaDy8wzXJa49xUj8lc5z3DF-v1SzMCCZxzStL3Ezc9UvvicxhfOGGc7r$IpvByzS$Ysbw17q$yyBYjkcPxcL$novpsXp6yEWw0Al3MarlFvRCII-g8EU0DxM8oJ-PUK8ZcYYC7Fq30jd+TYsNZAfUE7hSRO2noGmA0yZEEFnt5YDapE+OAy3J+CVdAMVmB$PNd0JK0$oH+A0dVTIVR31BmfHw64oVOq-P5uTCgUywRCm9UcUJQSwZ8961BiOR+t-7hPth+FEi6MSjIUyyZx0Al6A$6zTlhHcwnFo086IK2-z388M6pNX3wImXmTChSHfFdujIKR+c+1k5SJyCm$UypSyGCScy5tJPlQPG0bnCCf6W9wKhyRVjmI-Dvl-2GSW3FyxYCGlwP$ZpR8tC8pWRx0qFLlh8ywPyRF5yMJM5SHc0IXR20P9iGgUJ-G2$DI+M6zIaEDt6PUHCaprIcaQvZMGZ8DDXrTxOyf4Jyw22-$UcNV2rZxPQwnxY32-Z2rpPcbDmlFyQypS$P8Pln$KQovuta233Yt0bxcA$vhqDCY+tcDGs2wFQla6f0c1bS5vMuzPdzalwIH$rP8Dg429FSxrQUUKEk-GDI5Sh8abmWR9rQtwFl3l6-VvYtwNDwhjwKG-MZJnbi5mH$a$BY+V2yLS$zbSWlO3u$jY+5UIC0$8Q78jZc5$O1uLKRr9HPhJ25yurt$UWJS2WLHYSUl1U875yjIUyGyaa79Lpx4qP1SvICJH5h5SHR6bLI8YCLFEyg7pgV2dSoduB7nFd7JS2ERCQdZGn3OSPh$5-rHaQPG9GAlFMjI8ShHSduFRm4D0m2C$515NxX-m1fNir$7R8HS58vxEJ2Gc2m2CdwXYrRqLmz-y5Oz3AwHDzKSCL$kVf+GdN6PJHotKT71-Sbogt0FW7lgdtWf+2u-Fcf6osRUFnTg5CRtdc6iDP$0$FCCl$bkTbGhr915xm16kNXf-8IymaBmGhr-vNcCITE4T6-sy$ZtUEJwKZIHK5MQUbtYmjMYMIHX8NFC1S+GjD7JC4Wf373K+aPHbM52RDlFQ9aFoo46PxDhZd9CTNo$J-v1Fibf3FOabdHv$btUj-hqsICJkaI9Vf6dNXU8xCqNhAKdzfiu5VRmb8S76QEJl+gTKfbvifBd7otS8N6ayaEBww1ct5E3KnPVNWMpNiLIn7f6hxYbGLJoMoFsClzhoCVaCry5oLIbhcm0mdblPUP6PBcPs3a+mR-g1G2-N4MgnDwVZhlh$FVU0yByEjM2hFXKsTTT-WIry+zvTdphkUnRbtbxSoCk2KgnMmNjfhkJcCyw91dWCmj91r2Mz$0HESM5CvGq1Cj75Mly3yLXpjOPTBX0nyc1dEY$Ix$5xcot3+XMQH$TBJyZxHzunRSDBgnY$CsB7WQ-UlPHa4z0GKtlg8ASNvSi3VBdmhpFyNU+rOvJoZ-2x3OacX1pi3H28tmhWDb5vKLz70CIMTLBxj93MMJ5j8$326DGBdkQv$3Kv40z1CJvUbEI5IvqkiYY4WlDBlcjAS$Kj-M3R0KREPbZ2V1OM43lyYll-EWr8AlqU8rUR+W1ElzDF3H3878RNAbocTrtOaMlY3HvhJjpznNzxC2W-lCfmNPTCT1NQ0zNvbS72rAsf+yFqbg0V01rnElQUQlcsu93Q81TJO0qxN9wECiLjl$5omzKjxTpS45xgpSCYR0VtStFfZCaMCw5TNh52J2dsXaRtgu0kUGos4bmfO0Ll$oCXoQBsK6Vn2fyhngq552dc8V61$70yYZyyPgXGkmT44yDpcQlNYMbErnvynapC175-CY3Pta9hbEB2bPulAcx0NyO36w5Dtft+GAUpOzuXZLcC0hqbns4+HX9FJ2CJ6HS0KAAOh12pryS4Zl+pTvob-i4WJ+sM-xkzkRrgm6QMoQrohD$52LP3vfi4NTpch1T6OM6fWEjVpokgj0nPXIGTQNg70sFUo$b3VtLNwZ9JHYjbIsTDT5SLRt5URYGlzyzKc2vgDC8YyHo8$NoAlp5xQu4-YrSVPRwAx-Kl$lFabyv2K0yHAcsndpg$Za$tbN8W32RkfWxud3VmgEX3KqhdAoKZyndJqGdfz-2vkv7slc5SEul0n7UFTAw3XNKnwq+YEMp30kqTT8CyXEgEkWqIpXCX5fAkA7UzB4ksXq7XhwPnF$57TXQqhXQQV-8xBy9q-V+3V2Td+dOSPQ$CmXQFLFbq-CSCtf0X0xYC9gxMtblw0hShJSmYOFByYMTKwXbqOYhqJlM0LZQ8Ahm$DpbSSaMK+GRAwTCTwjz6COyjUxRG056$5CmG2atfP$5Czq5a98mabj8$94-CYCUxyF2Dz+bM2DmuV$y$mjUsQKh3YS0U8$zG-CStZGygIp6UUQb8tczSPutcvk8f9GRUSv5C95$1nfqXyyPcbYTPVa35s2m2XPsz2PwynwAG0ubYn-Buw2DSbgV12RSz12Fmmyx2DR8BiPgRsuPIAfQCUBuZ8ZL2Om0rCRcZyRK7O7DR1GUSV1WBZlXR2PjIE1$BQBhPpg-c5POBBg6VE7WZvYDPj2fDJ2tDSBLgpZIuIZZfiIZlrR2PrZJBL22BIZpBWHOBml5Zf56yfJYZZfs7CZmZpujyyhLDpm2Bkab2rg4R7BKm2Z$DJ22B87BRRBmltlXuABH16muhfJ+Z-BBu2csfKupa$jEDM-7HIRUlwDQgt1CEOyzjKlBwwDfgj6$FPSoy2y0YjFOU6SaaC2jFJfWV41j611UIn$Z2jF75MS3VQ6WlKlwydPb8xwQCj636hBJ23F0rvPm836VuMypFwrjF9z4Vn-jFF$x8fmQwCww8$l$lU22VvD$rQ6UfurgawH+S$IYFz2jRqmx5Jaj67PKl$VAyizEF72RFmR2rYVSFmr-D267RJBxVx6Q67P7En6Jag8iGTF7yoVpcsFMyd6+zgUj6Fy$BiuuIJBfD-I8uf7QFCLDShQ11Fyr1lQ$BM-61hIHJbEaQbybfpElQb2TCcQuFRlxYGZCmi6Imm7uLFLWuML5jARCm4a7$XVO2xQgasV7cOLAVE54+3zbQm51PVml8C2V5gVdGkaRlY25r9ryIO2V5zfXykGVH7QJu9-Y$ZyoLDSNYZyYywrzQcwxyELvBsSUmX+Dmn-RRDwW2nUtBRY8-uSfg+fGgNfnLdFJLz56Sbw+a8yxu4Q+rOydLkIMuQQ3g7HyM1FjQwrhMYPbykQZ2hvXC+rJ1M-hMjZby$ZyMxuwM$ZjMC2hvXycjyv2GyM4PSLXhGLcjVcODc8$L118LjM4P$QWM4R1gOH9ZX1Wv4PZC7wK+mEmV9M1cfg9M75$vV28MhM4P7$uS8-NEIv2$L-xVV2fM7MMCfER$XLxvOD75zMcY+z9vXCXro2cGFvOD9-lhgM4PLMMCTumvOVZ1F1sQ4RrvYUjg9v9Z6McYVzQfTvFEprOHFrQljSKG9MnvdvnyOMaG-r5FuvCWpDR-4vqMhWdFqM9D8WnZDvaWQfd6qEM2R8IvUNpDnB51JGPSFM8M7yBVZlQW+MhFwYJvJaPMGvKmcH+mT5HlbWZLKzVwr6kvDSgSDMkWKGiQm7sL2WXzurcJO2fYHIo2Mrfvf8fIEzMw5Nt2dfVNd$mFFCQCRl3GFSMJm6YNr25WgSyNCgn--WgS3ya6l+ENEwZyvWKrBUxEoysLqS0WfS9z8gNf0WfudWWysLo2AFCyXWtlcyl4s$by55RGiMlh4SjuX1Mr7F+1MrkUuWTW+m+zJmQlY2qrLWSYfRqSwyjyD20H2-QIIwZ2i6dRIQgy-6Ocd8ErNUwY340mi3U$vBOyg2ByQJJ2NgkV93V2p34YFyk3YDERVDt246zV93+B93USq-KLcgP4By-laDMcNDCyw2mjFa71Fm0SzIDuCyiYXFhDsNCMwY9r9yJSz49G+GG4o2F3+wAH1Dx2r3Z29GMCSwc2o2oyYzOyq3S-11ZSWyGclIX3BSS-ANhKq3ElRvJu04CFoWwGyiHwkFM58iSKDKkFtImyBMK+MwDKB50GG1f6t8WysYEjzHT4WyMiZJVZcHrSmrX33Ka4MKpmtLxKQKbiii-aDcxKWipi1fOK+f+yIBVyRzti+29K3iXCcCTQQi1KbVD-VybVrKpijGBNVNqw5K-Kf-zizN4mmity-iIiiKIWWQ2K5KLitQgN+UEK6iul1QRlkirKvKEiy1SNXFBi6KAyiK+7mjAKBiTi0isKZHAiB4DjP+flXcZCGi2iMIXSBypyBN+SQKZc1vfSR5V-9KwtAMVHfB06$QPtbDPKfIP011ZtQCo2u1HBX3ajtajuRSsyttZLX2ylAR7HX2my5M8KX4$w54NEBz-yRlgSc2iD-ISLLVH8kt6UJtluCSWgHKkt7tmF5tCM+0lPVZPKYthcJ3-0WgL5l-H010E0lvWuKiE03fuI8P+aIt20KGwKdGk0z5FZmGliFSdyY06yf3tmntFZ+rHtY1trD0tmlx0rW3sz9tLyT24aDysyuVfl7504nHX4VwT5E7J1qSjnVyx2h88So714T3wxunp4ojIW+ZVcUy3j1ZcjELqr+SWx3J9u2CcgS6O2tnWIxnq2MyRN7c9ncrMWAHkxXr2nMw9xbyCP9UAYOx37oc+SOHZGxRHl1n-CbH7Gy66yYxtn1nR4tn2Mmckx3j$IhQSfky7UC2tnBx64yVrxZ2tntYWyL0q-Kx48WynxfSNngx+x3j0xTngtKrqnRxilU2wvZ1iyvivx3jCAp0+4qmtnGb9zNtSAtn1rwMrxlSVnnMfmp73Bnx3j5vM5LfUbKx3jdF+n+V62Mr+UWFtnEjM-EnkPVZKlv7MDjWMR4y+1$UVZsvOntbgZhN5hw2o6g19bkbJysv2Ao6k6oAg1pbhWuGY2r25rlmCS9bjb+AbbQf5bYbIVsH-AoUZVgnoAmGTyiU0GaD4tCHKtcgFWKx77ulzU6moDKbA8mrNK-ArbKA+GWfM2TAoAsAdb8miQmc9isAWEyTMQGrhTXbFK+ScDW7RgjTmSty8f8TNSLZhPwTy5vURZ-ZcO1mNnqYa4$OF$W7wTov8TDTFOy$PToyKIH7DwjguOpSzIKRHlKLNExToviHbwZypT7GNj+yGjC2kTo22O47+zJOM8fP+arTu4W2mTWTQT7GKtJNNGF+QmXUyGkOYTcTo2czO2JTWUltJTET3Ooza45OQTy5zmUTFOillEgYiKmVjTL5ojA3FTCCdYDYnKIzWy2JzEfOwYjO5bQZuTFTp7qOG9v2o7HuKTCCVJZjERqOVCkul+yzPlD9JIjwdObyoUARjqD9fq9YnOwrjOZ9iVP-bVdwTycqyfV2pWtrx2yNGPOBQqlJtr6ZuISK2Giqt1UwxqbyiqOaNYg1HZcqtfS7ERh9$9$yy9ZCcymqzfKlY9ZJCJV9B2pP19VJEEV-+rE7ZjFCcq66FqRTFOVCgDM-Pq82Wy72MGcqKUWywBsfTjc9p4OPOqL9$yOtRI2qbBH9NCzT5GcCX9mGcq6VSjX9c9KS0BN9jyFCLQJyoKP9daPqq9$qr1aSW4tBws-qj9SuxS4NusFmXSEIqO+DwZFHqO6qqT+TITjOipxyNTvL3s0ScC+VFpENjqD2A5qTLP78mHppp1nZ19U9Q66T9hlPuKNBwsrOP3LqCC7p5Tta5pqTjq1VgHqOd9QqFTHpNONcMCtyYm-sL2$50SHskt-TxYzT5S5sFIODIy9sCHqOROETCJczqTjTqpPnXqlqFOv-qpsrlBjqBONO$5aswpjlfC$Vd2qsq4yS7Bwpj2oBdZXsCJBBDGmLdpATFOUdcoEswovZ-p8oZo98L3hsj9KSmn69TpvO1f5pio+UVpTsjDuqZhaQmptljqwprz7Y$O7G5rdtkO2d5rkiJO62I4ROmdOFlPDf6f3BI3uGXG-lVc5dJyNbV09OdsZNFB-4GWsjFC$DMCNHflMCrzL2kN7cum0gqw4bfuKomc4-M-+7SRRTD7jmtWTomjvURG2psdP7dd0xU$gE1T5jdoHrW2H-lKdfv-RTUJo2HB2YSjjXuJo2yXqm9ZSr1TqickW2mOF+VmfnPcLr+rofnoNoPXdyatFXtrndMkZkRINYFktlIaOKRTdzz9ibjTxSsEv4fWXaxFgFkOWV+vl9Jk7yjtJOFS+dhduIOakYfv1Xo8cjMJ3zZUhzOkE8N848Q9vYHkz2mTjnZHVaNdjnWd1-5-MlkTjdL2RTPcB2mXWXTyBbZy+K6Scy6LZyLQKry0OyTXOAhSn8zXxLyWy$7gWZEFHtX+llUyRcNXRxnyzFlo8OxPyYl$lqwJ+DXk5+91clql2aP-xVy0YZlUl$A$RMVF540BOFGGPdFJifF2CMoSwR+UEycQShqclwHQ2TlAh0Xhj0r57cnl0h$-O1Kh2wWsyj6vRDS5PRyD1HFy6LbC1PyXoNX$98-5jR0jXkZlTZBD6M3WRBwuwRCFNy3ya2mlblrCF-JzjTa52OlTlPaqUPxuPFcmVXpL+djl2-jY3dCbGDzNiRR2JyRhJHh3Lcyq2o$v$vj$QSNatlfC9j0jvP$g7gcA$oN9AD5+oPhIIS0tlh2mPk7CIPmd78LDY6rP$Q$CY6sBtoZL8$IEhbbqIhIZqJYboCOSaWQNr9PhIPC1PvjRUR7IVwrCsgYC$iBa+48EC8GawMaRzRsyWlzGaPYjhy+MI+CIG1Gni$lJ2I35UG1wvxJrJwI8hrG6UzAJLROIahGV08SO$BRSk5CKaVjUPy18ZQRcyjvxJHIkRylI1qU8fS9RpIL$TD$ct-Yp59RISH$VrvKIS6Ay32KyzI0hPzjuUXIdyvTtIhS$Q23ItLzy17yO4aP+atLv1cPUthtCBS6NDQ9IZ83OhrUbf6O$SPKM6DZyOS7Yq20+tuyPptlaUvwLFJFaViu$AnBZ5pal28tfQVupht1$D2AQboCMYVFSRSzHSGn690KPjPrrqQ+5A8FMSoIMyOJSGOqpMqXPlIml+hMwIvVHvFB7JTo4kzr2IrWZ5Jpd0D1U5HMVrIJiGN1xoVPIQZ5JZcEZtrZ1$D2-JVYdDfWMG2xBoUBGO5B3A1GPhvJ8h9S$uM5iOB-JGn0yf3SV52BWy+xShS-2hIw$QlkGx28Ttg5jgViZawC6vxJBLCwJkGk55uZdMkjC+8hUDYn07ZYmcph7awAhlJC9S393GZc426tNY8lOS-6QU39ZIEPwG+Gg5GJ6YtEZbyIrdQtNIhBhJ+20ac5PuBaLbB1fAlU-qLt05OZo+BlNlzf8wvL1WtPdt6$QSBKzZHG9wz8C6BYaaRoJojXYn5b-4Mcy2XGX0yZnT53Hma9N5lmo95J$27yvkEyrMxd5P5sS8l68pnAaRsB+PGvJ+cJ5KN41pIdjLuEkzkl7-nWsjBGpKTzCkHqSulRgsFIBBl+d+0KD-8rxdJS6A$bhHMqSthyBjfu2$QFvjPRPQZCy2$kHH60xZFBPDdgP$omySY-yDyRCqMPN2cJmYbiniyZVoZ-NDyzUCSruJl0a8Pya3Cg0ZAMVaMXZUyV-qRNgRh8QF7m++aZ97b$8hD-mY$Ojm2Dim58Pmt8Lkrbnw8i6qi$iPydzlSxiS+aY8+uMNRMl5c1mdnJbvlJ88+jxmtyDGv4ySYw6HWGpJZ6mmuY$roZoCSQJ7zI1PFHmtyJl0h$1jQFcb-pyZd5qzrsBjlX8jFbrC$LP6qWEbFPcrSD80RumV6DOBYSFm76VmngtFdFUWnF1h+h33WdU81$$6u+IrdttvQ3YOZ5JG8LZJAD8n7ZNmZ$nJU6JtZigqSkcqZZh0hLzJJrR$zMmE$RI$yuDmSElqkPkl7CZyaU9p8S2N1iJ$JiwHp8Sy-SB5jSCl6UAHmVl8zCwMOmgYZ5Z$G6Oy-wWlPYZgQGJKrpcA$BNJ+Nwg-rAM9uP1Tzvt8UlkD6SMjU2YgaMyNlKgrC$Y6kJu8HU0lb8nm2ZCC1JyJtfRzpPCQ$1+lC39mtQyDwCy8D9toh2+NjhZ1q9ElRHIkFGCE25QfxJGRVi8yYoh254RHxHjlVOyBD4O5myPQzJf8sjSlRm5JlO5Oyla4FUQO5xx2HSnlElSAY$RFQFhRUKMRZA$ZGr-y8nbUVGP+RW26aDlRrv2VMmRuCyP3SGa4UalW+OyYIU99jIc2XJ+iKyU8RstTQAFK14f4FtN$xx7Vn1KoCOxF07v4FKGpw8yRKq6W0FPC+wwia0UoBIc+1JyJz9tQYY$2p3Hl3ht2P$RJQCyZfZhq0q68324roUgC0ITcZTIRyGk0$0yJ2L2IfZulg9FAv1M8yTcYfcbR8OOMkBHSgfTS5AvAJw1linB5YyKV-BraZyoUJitRPvhlyfCEGwHvc0OYkLG+w8Gl9qqXP6QdM2jcoJqSJCsUlknymXMsUAnNLymY+fHNqM86cy578uZPfJ2IQjj673uZZSgPGi7ZIyYuh+2j9sxKQcwgdUVUj5fPoJ67PMD-RfYuPdLs7jxAkoXSybLhFaUycOWXUnnXLPkgYM2V78zWlMj5EUdMSlWQ5rJC5vuIhSjyOxZfnFSymhygMhRqSjasy388CcfyKajaCcbO$j2Oh97gaMO2I6nSL6lJgO+C5HWCc8ycvW5tlvnHC$jNcynyTISiY+JbSxjny0$Jx9tvU2dCFaClR0qi98AKLhMtY$JajPRxXCVMtDuMnJ5MM3vItE4VzRNFUD3yo57PQIDj2Q4jIz5oUtJD-yi0Qvz$7l1JbvPfy72XhgO6J3ycghc225X-Sb3tRtYpL150c8mCn+VIkhvllwobF4YZAqSEPZfzay8NhVUGvr9h542fR2I8lMSAd9v$NtOjNyEjn80mdTzLC3-QYEDwUP6tVBjIWlNjYl$n8XC7vlk1y4mAlrk8DyqkwX4Xpm2QAEvoYr7MxF8RZyN2pY0uCfqcbdFRvDwEj1mtc6xVfJtYxbyj$hCa2vMpYuQxnpQyYj1cgPaQZ16ccN6vvuix$-+H4B9b7Gjl0gSC2POpDG-xS3$OrEwr-7mG+yKB$9Hs9pDwHBYA$q0B$pODyW12u$MpJf2I8Qyj1rQ+hywVZQUJZYGa95V8cMA92$VKSAt3ISPhA2kaW8J1JRZWRuh$Dy0Ph$vVYYSWTyPMFI8CLS4mZUVYM7r42xaZcBCh9OtoFgPWyK11uLvRDrQGujJrVyLvJjbztxGRvk5kqCV1rxqxcNkVbF7Y8UCaPZWkV$WkV4S55V0M1V5$So$Pr18z$dYBl6$t1zFbVJ9YIWg2UF$iAFCA8CMBr4Ey-I-rChBDDuDMY5A7m3I5hbsIK0llONVysGKa$PH-lYGr+NW+ZfBq1P2N6SDjjLRBAtjA2uhCgoPbMrYY+jvlP3fTRGFWPb5MJj3P0RV$8b1WhjO3NkJRImm38srKSvzdHJLAjhSr5hFHdZrNV6ZA8uwyHECPNA5NuaRQ9HabHDriNTfGaFH3Lqv8gjAc5hoOfsF6WEMQCScl8SoAb2V2r-$cr9pKv5IBNLfI8fUn9NFV8lp9ci-mEHFWPlvNug$$YF3xYjrN0yGPkgUFcbll5L-IilntMr+PqWIyouSjUc$NPcjBlYC6gFoIMQGmuQvOyy5m+yolJ5aErMmH7WBNGil0yZIBOYLCNrwh71pHqzC7ForLi0bcIPJh8htwH3CIFa$sKT6BwiiPXz8W3AcyvZRbqt1SxOP073z0q5zWa2UIPyjyI7549+cmvcQVDJCCtp$MSPtC5Q37fFy0Z00BuJzqp6gMmNplxJqSJZomYZ2$AK-dff$aisOcznjImDxfJoYSP3ClJjScxihzf85izLK-Pfxh2a58wN1-yClMDCnUpbaUlh2c7rSAON7zgtGIlv2WG$UwmQv8hZGl0029xM3yHIoEl2jOU0cuVc9Cb8DS0rtUZD5jxKDdqvS2NBz5ZwwpSS5hAKmdDK1MJAlcQ0b7Z5yimOnhN8ym7qwtSqlmGNS2s8nyfQaQvYcwD276SdPTkWvRQwLDc815PZrI53OUDlc0qmhm-G7C94z5+bEWr5cwb1+ft9$qIb3xaaEMrHYBPNajtURt4JojRt+A2qUAouulidS+omscAo3BH-yRjflJDO92pW-79CyfP2WoMlf+Ss$aSI4MjMuCvSBuNjrsYY-FkEjyjSqOcbAW47++5mMJtRRX4+S6lzhtDcfRPYA1a2bmDJMISIvn89w6ra25jPOhfYbi8-FcPTD0NChxCJVcWQW8$ixYIk0569-jPEvSG5OU8MaU+O92qr+uvEVDP1TjuDYuiwU5vtbQcKa3-97AvEW2LJ$O8Ga372I8EAQ5vVQcPXvKlpPtJxEWFWGqvs1wcKCh3b5NDNc8OLv0yuOIIrwHMaW+gE5xHvM+QOA$CHkFjc9Wt0MPr10SQS9ZxCPz7ny0EAUW8Rkt8PXIMhsU7$SW+yMYIMhkQazP4Ic2BCCcRRFa6PI4V$ylhwDwl5l2pOKyaj6ZLKdk5gGOzGED7DYb1s1P08d37Mg80Z5DPyjc1OSMqCArsYADug5iw2CwzqAwQWl4lFCxon+BhJD8QSvhtftQ2rS3m+UYHDfyu4kKayBDyTxF5V0JK237iTqxvOSAVrUSo3Gn0YryZA8rHsymCqFS4v7WpEHicY6ABllviWlBDm7xAH6bwWQC5RDXoTDTTYiT7rinddqWbBSIn$zjqdfF+yRi4EQ-ySO1MnwO0QdOmp0X6o+ylSrAUniyyTRbSIalwGkx772wsYlqKGgf$vhykxp+s8CSp26bqC0aVPy$wu3MyiC0CqFh21xbHXdlfYBFhsgo2llOFR+BCF$RV2Xx52Zl-wtajn8$P2HqGBFQZCpuDjN4RaqftzUylMxUh$j9kypkSIYykS1WD8tE3MDP1NNm$9oZmPGlRsCl18UA5$wVMUsbh4RZZtWSn2Tl0ZxQT9cFRqGPL2AtdClJ6RoCtqdaTwUR34RxsqdEIWrni0WDNIwbP6SC9kwqRBj8hgFITlZiXRclmE3hd+BDGSRAashi5Wu9rPKGpIQI38xVB1+XgDU-NmhoGPLa$RDcP-1h3k66E9RJTEP8QpGyBLPtn2h-Dh0ZqZClR856lOC2CYV3$RgbHfA0IyB-3w-X7mGjSZntf0RSal6O0SPW9gtmfh+8VBKbUGS0nWuwmZvMhEF6tmf$JsyOgMMqczaGtFhIF2tORYVWBryvaLVVo31tFRla4WZwfjq00-yrxDSkfa3SGULBlhYO6copz5Q$R6+Z5rcdpUgtABg+n$$pmohLPVy3r6lQ2$2US0Hy5yAq6c42zzL-+S$tCz-DjUut$6txUANPoMzN0zrPmH$ifE2zGnvBxm-ah$fIzGx1-km8cY6Rh95PQ6SJw8u+5Sljlr+oES8icfkU80nGsPl+mPoMmkw$RgOSaLQaGyJUfS9W60P8dj1j0a7qN6l+nvkqChNQnyIykGtm2lRnG-OP8R8yHil0165y91P8ap9YrhtCUmlQC1cwlDk6+rsHac3YUH$L6vw9y-G4YI93$BwUSXlZZY9NrjYn2xT1OYLNnUU$rlzZ$BlhFxwjBkwLwut1hl1W$R6U3tt4JRWH0CS8lpim3aCzj+I6FwU8SMoHhlC3RS+IyhbIBB4y46ryq$Unlzq5x47puCyi8fj9lvMLfzay+OTB9-ndgt3FSQ25yAJnau818lLu1pJX071Wix0Ja2b24DElplHM2Pcw64mJ75h6qAor7WGgG1BlFlMY2llmzhtf3cF5OcfRi4yS8JZjty4wBExRLf$5chOEYwKn6LV17UkQ0w-StBR47$uXC1mZFytE32cluRIoxIITLt2Gl-D2Xq8tpaOMQuXC3IwxnIQ67YlXk3jUansLU5+$T2aO8u02RTlaCjIf6NCb0Lx5HiDxHWlYYDGQ+LPjGd8-$Auvr9zEy9ZSpsnUv9IBPjI3X9TnuaIIZCT2ouUnc6L45ju7ofjH8nGv45h8T+or6DnbvjJsiqpojschkvcJnPt31qUn58Bw5ubx8HFFtw6LOJK2n24QU60tvhZt7mMfws4KL-cYQuT91Tw1tfum7hG7FoaZYtiVm7cl2I6ls-0jSBJ+ZuwoOSAWOBlZRG7wWucDlb6m7Olj+3xqBt7BhVZAzU3xK3AyNP+cF+9fsqv0NvmJgaKIopqantv-+s$T2opUPAcNg+88TYoiNqtUNg+jFQVoiG2AvL-+TcLQUacQyxGw5p$KZJqUSbiNQmBf7o3FsGx9Rf5NWkY13pjnovsVH$KY4WcBbqQ+Y-$hFaXvxAGED-c8hV4tpN0ZNy-73huciHGxi6Rmu7WH4m9VAa6Amh+A2E7zwAtvAMR0Jy4sP6AFyariP+MEhpmGZ8w5iDug4Yq$t6LZrhTH9octDI-65NM71o4-q0Ky4zQdDk+12HtxqNd3xFiE3IcOu4L0-iwKRf2HOnYvLrXuUdOospxpvtPoQzHoyHkxyLp5LcO4Aa9-b6LmzpiRBa6U+xKGf1iP76Ex-+AGvwbNXIJCrRAAuLJF3iQb1aKCAxLV1ixhvdNqqvbYY7jbTryJsZO47rYGQuBd4UQTRvP7O3XL1sxUOXgXzTjXk1kvD2VYGEMGMZBMKhiEExxYl$PNGJ7$3VYHun6NNJ9s84433gDipBAUxi5-CutOKS3+i0W47Zm43rlYsAwQ44GPOXoorHpzirPvbUAIf0Rp5ZAMQSVl9IVDPCyyygUn1AN7zxGkbnWRoyhlUz8CyybxsPhyEgVuAfcn95rbyBlkErcUAdqboyp77irfq2VU2D7V39DFc$jRZVK2UlFWnu2GP+87a9KU977vT3S2FI0yayyyyCyyMVfEcVDP6Owl8guc2qayRf8giIr40AHp2vayyF8ncuMJy7aI5Un3YPCIBCBlF$zW2nHumBu2yFok3BxF6TqfOUDhqsf6ZUCMyQEucUfynHXOrKsG+VII5qsnTvK4jMIA$HBcXhBlccGoTw1F$tQnyuRlaLnP9RDUVhAGDjZhPk6SlAKr80g4yPfyjtl8Ih1piTacRF26K$gxoTq1+yvOYKMgcy9sfTcGIHKoglkQBGGR0ObySRZk-d1sHTO0K+ymkTlKdp6OqKFcvkLXdXsDqy0bSalvhKyEolNHuonF$f52yJhDO5yFoKvPUP9ysCIc2qGJP9Pjr4h8yq5vsti+glf5KS2qxcGPbT28CcGU6ZNtr8biEkhCSjynEjDrOwKu6ahmn4WVk9Vrg+JiUnfV4$JuK9z4F5$iys7OSfD6hTGUqLHFIuK1wd9+I5UR7TN8MTqc$Nm2Y020lyGCpKM5$qm+j$TCN01NUWo9y0vQIF9-qF9yDhd8casc0DWIAOa$GXoZjcnEaPF5FnKz1kpLOJR2yOnckwczkrDPQIUljwty1wjxfmLX0oCFl5noxEMhgfQSUyzWt6s02Bl9LcyvckAs3ISyDGMDmy0qpQIYEn6prnTWSyy2Z9+XN4KR7loK+uGj9w7OZRKOC7--FIQoJPcOZfcGy5kLENbyiT7zSHx7ZM2$Iyyys8yy","fp":{"results":["7eebb31ba7d672a8d9162ee313699a4e","a0c757198a9e6c030798e33259ff39d2"],"timing":301},"s":"0.7831075408099677:1655904246:aiorhoTKsMmEFYKZNW73MnkXR_fH-_MaDU7mfl__5NA","t":1007.8000000119209,"src":"worker"}`,
        "method": "POST"
      });
    console.log(request.headers)
    
    // const res = await request.text();
    // const regex = new RegExp(/<table>[.\s\S\0]+<\/table>/i);
    // const subsTable = regex.exec(res)[0];
    // return subsTable;
}